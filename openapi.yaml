openapi: 3.1.1
info:
  title: KakeAPI First
  version: 1.2.3
  description: |
    This is a sample FakeAPI Store Server based on the OpenAPI 3.X specification. You can find out more about Swagger at https://swagger.io. 
    In the third iteration of the pet store, we've switched to the design first approach. You can now help us improve the API whether it's by 
    making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
    
    Some useful links:
    - [The Fake Store repository](https://github.com/rafaelsteven/node-apiFirt.git)
  termsOfService: https://example.com/terms
  contact:
    name: Rafael Steven Vera
    url: https://rafaelsteven.com
    email: rafaelvera@gmail.com
  license:
    name: MIT License
externalDocs:
  description: Find out more about Swagger at https://swagger.io
  url: https://swagger.io
tags:
  - name: Auth
    description: Endpoints related to authentication and authorization
  - name: Hello
    description: Endpoints related to the Hello functionality
  - name: Users
    description: Endpoints related to user management
  - name: Products
    description: Endpoints related to product management
    externalDocs:
      description: Find out more about the product management API
      url: https://openai.com
servers:
  - url: http://localhost:3000/v1
    description: version  1 de la API
  - url: http://localhost:3000/v2
    description: version  2 de la API
components:
  schemas:
    HelloResponse:
      type: object
      properties:
        message:
          type: string
          example: "Hello Rafael"
    User:
      type: object
      required:
        - name
        - email
        - phone
      properties:
        id:
          type: integer
          format: int64
          example: 1001
        name:
          type: string
          example: "María González Rodríguez"
        email:
          type: string
          format: email
          example: "maria.gonzalez@email.com"
        age:
          type: integer
          format: int32
          example: 28
        phone:
          type: string
          example: "+57 300 123 4567"
        password:
          type: string
          format: password
          writeOnly: true
          minLength: 6
          example: "mySecurePassword123"
        createdAt:
          type: string
          format: date-time
          readOnly: true
          example: "2024-01-15T10:30:00Z"
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "maria.gonzalez@email.com"
        password:
          type: string
          format: password
          minLength: 6
          example: "mySecurePassword123"
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwMDEsImVtYWlsIjoibWFyaWEuZ29uemFsZXpAZW1haWwuY29tIiwiaWF0IjoxNjQyMjQ4NjAwLCJleHAiOjE2NDIzMzUwMDB9.xyz123"
        user:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1001
            name:
              type: string
              example: "María González Rodríguez"
            email:
              type: string
              example: "maria.gonzalez@email.com"
            age:
              type: integer
              example: 28
            phone:
              type: string
              example: "+57 300 123 4567"
        expiresIn:
          type: string
          example: "24h"
    RegisterRequest:
      type: object
      required:
        - name
        - email
        - password
        - phone
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
          example: "María González Rodríguez"
        email:
          type: string
          format: email
          example: "maria.gonzalez@email.com"
        password:
          type: string
          format: password
          minLength: 6
          example: "mySecurePassword123"
        age:
          type: integer
          format: int32
          minimum: 13
          maximum: 120
          example: 28
        phone:
          type: string
          example: "+57 300 123 4567"
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Credenciales inválidas"
        error:
          type: string
          example: "INVALID_CREDENTIALS"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
    Product:
      type: object
      required:
        - name
        - price
        - category
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 3
          maxLength: 60
        description:
          type: string
          maxLength: 500
        category:
          type: string
          enum: [electronics, clothing, books, food]
        inStock:
          type: boolean
          default: true
        tags:
          type: array
          items:
            type: string
        price:
          type: number
          minimum: 0
          multipleOf: 0.01
        specifications:
          type: object
          additionalProperties:
            type: string
        ratings:
          type: array
          items:
            type: object
            required:
              - score
              - comment
            properties:
              score:
                type: integer
                minimum: 1
                maximum: 5
              comment:
                type: string
                maxLength: 500
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JSON Web Token authentication. Include the token in the `Authorization` header as follows:
        ```
        Authorization: Bearer <token>
        ```
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Registrar un nuevo usuario
      description: Crea una nueva cuenta de usuario en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            examples:
              registro_completo:
                summary: Registro con todos los campos
                value:
                  name: "Carlos Mendoza López"
                  email: "carlos.mendoza@gmail.com"
                  password: "miPasswordSeguro123"
                  age: 25
                  phone: "+57 310 987 6543"
              registro_minimo:
                summary: Registro con campos mínimos
                value:
                  name: "Ana Patricia Vásquez"
                  email: "ana.vasquez@empresa.com"
                  password: "password123"
                  phone: "+57 320 456 7890"
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                usuario_registrado:
                  summary: Usuario registrado exitosamente
                  value:
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwMDIsImVtYWlsIjoiY2FybG9zLm1lbmRvemFAZ21haWwuY29tIiwiaWF0IjoxNjQyMjQ4NjAwLCJleHAiOjE2NDIzMzUwMDB9.abc456"
                    user:
                      id: 1002
                      name: "Carlos Mendoza López"
                      email: "carlos.mendoza@gmail.com"
                      age: 25
                      phone: "+57 310 987 6543"
                    expiresIn: "24h"
        '400':
          description: Datos de registro inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                email_existente:
                  summary: Email ya registrado
                  value:
                    message: "Este email ya está registrado en el sistema"
                    error: "EMAIL_ALREADY_EXISTS"
                    timestamp: "2024-01-15T10:30:00Z"
                password_debil:
                  summary: Contraseña muy débil
                  value:
                    message: "La contraseña debe tener al menos 6 caracteres"
                    error: "WEAK_PASSWORD"
                    timestamp: "2024-01-15T10:30:00Z"
        '422':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validacion_error:
                  summary: Error de validación de campos
                  value:
                    message: "Datos de entrada inválidos"
                    error: "VALIDATION_ERROR"
                    timestamp: "2024-01-15T10:30:00Z"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Iniciar sesión
      description: Autentica un usuario y devuelve un token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              login_usuario:
                summary: Login de usuario existente
                value:
                  email: "maria.gonzalez@email.com"
                  password: "mySecurePassword123"
              login_admin:
                summary: Login de administrador
                value:
                  email: "admin@tienda.com"
                  password: "adminPassword456"
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                login_exitoso:
                  summary: Login exitoso
                  value:
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwMDEsImVtYWlsIjoibWFyaWEuZ29uemFsZXpAZW1haWwuY29tIiwiaWF0IjoxNjQyMjQ4NjAwLCJleHAiOjE2NDIzMzUwMDB9.xyz123"
                    user:
                      id: 1001
                      name: "María González Rodríguez"
                      email: "maria.gonzalez@email.com"
                      age: 28
                      phone: "+57 300 123 4567"
                    expiresIn: "24h"
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                credenciales_invalidas:
                  summary: Email o contraseña incorrectos
                  value:
                    message: "Credenciales inválidas. Verifica tu email y contraseña."
                    error: "INVALID_CREDENTIALS"
                    timestamp: "2024-01-15T10:30:00Z"
                usuario_no_encontrado:
                  summary: Usuario no encontrado
                  value:
                    message: "No existe una cuenta con este email"
                    error: "USER_NOT_FOUND"
                    timestamp: "2024-01-15T10:30:00Z"
        '400':
          description: Datos de login inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                datos_faltantes:
                  summary: Faltan datos requeridos
                  value:
                    message: "Email y contraseña son requeridos"
                    error: "MISSING_CREDENTIALS"
                    timestamp: "2024-01-15T10:30:00Z"
  /auth/me:
    get:
      tags:
        - Auth
      summary: Obtener perfil del usuario autenticado
      description: Devuelve la información del usuario que está autenticado
      security:
        - JWT: []
      responses:
        '200':
          description: Información del usuario autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1001
                  name:
                    type: string
                    example: "María González Rodríguez"
                  email:
                    type: string
                    example: "maria.gonzalez@email.com"
                  age:
                    type: integer
                    example: 28
                  phone:
                    type: string
                    example: "+57 300 123 4567"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-01-10T08:00:00Z"
              examples:
                perfil_usuario:
                  summary: Perfil del usuario autenticado
                  value:
                    id: 1001
                    name: "María González Rodríguez"
                    email: "maria.gonzalez@email.com"
                    age: 28
                    phone: "+57 300 123 4567"
                    createdAt: "2024-01-10T08:00:00Z"
        '401':
          description: Token no válido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                token_invalido:
                  summary: Token inválido
                  value:
                    message: "Token de autenticación inválido"
                    error: "INVALID_TOKEN"
                    timestamp: "2024-01-15T10:30:00Z"
                token_expirado:
                  summary: Token expirado
                  value:
                    message: "El token ha expirado. Por favor, inicia sesión nuevamente."
                    error: "TOKEN_EXPIRED"
                    timestamp: "2024-01-15T10:30:00Z"
  /hello:
    get:
      tags:
        - Hello
      summary: Hello Rafael
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'
  /users:
    post:
      tags:
        - Users
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                age:
                  type: integer
                  format: int32
                phone:
                  type: string
              required:
                - name
                - email
                - phone
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  email:
                    type: string
                  age:
                    type: integer
                    format: int32
                  phone:
                    type: string
  /users/{id}:
    get:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: Obtener usuario por ID
          schema:
            type: integer
            format: int64
      summary: Obtener usuario por ID
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  email:
                    type: string
                    example: "maria.gonzalez@email.com"
                  age:
                    type: integer
                    format: int32
                    example: 28
                  phone:
                    type: string
                    example: "+57 300 123 4567"
              examples:
                usuario_encontrado:
                  summary: Usuario encontrado
                  value:
                    id: 1001
                    name: "María González Rodríguez"
                    email: "maria.gonzalez@email.com"
                    age: 28
                    phone: "+57 300 123 4567"
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuario con ID 9999 no encontrado"
              examples:
                usuario_no_encontrado:
                  summary: Usuario no encontrado
                  value:
                    message: "Usuario con ID 9999 no encontrado"
    patch:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: integer
            format: int64
      summary: Actualizar un usuario existente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                age:
                  type: integer
                  format: int32
                phone:
                  type: string
              required:
                - name
                - email
                - phone
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  email:
                    type: string
                  age:
                    type: integer
                    format: int32
                  phone:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuario no encontrado example
  /products:
    get:
      tags:
        - Products
      summary: Obtener todos los productos
      parameters:
        - name: category
          in: query
          required: false
          description: Filtrar productos por categoría
          schema:
            type: string
            enum: [electronics, clothing, books, food]
        - name: inStock
          in: query
          required: false
          description: Filtrar productos en stock
          schema:
            type: boolean
        - name: minPrice
          in: query
          required: false
          description: Precio mínimo
          schema:
            type: number
            minimum: 0
        - name: maxPrice
          in: query
          required: false
          description: Precio máximo
          schema:
            type: number
            minimum: 0
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                productos_variados:
                  summary: Lista de productos variados
                  value:
                    - id: 1
                      name: "iPhone 15 Pro Max 256GB"
                      description: "El iPhone 15 Pro Max redefine la innovación con su diseño de titanio, cámara profesional de 48MP con zoom óptico 5x, y el potente chip A17 Pro."
                      category: "electronics"
                      price: 1399.99
                      inStock: true
                      tags: ["smartphone", "apple", "premium", "5g"]
                      specifications:
                        brand: "Apple"
                        storage: "256GB"
                        color: "Titanio Natural"
                      ratings:
                        - score: 5
                          comment: "Excelente teléfono, la cámara es increíble"
                    - id: 2
                      name: "Nike Air Max 270 React"
                      description: "Zapatillas deportivas con tecnología Air Max y suela React para máxima comodidad y estilo urbano."
                      category: "clothing"
                      price: 180.00
                      inStock: true
                      tags: ["zapatillas", "nike", "deporte", "casual"]
                      specifications:
                        brand: "Nike"
                        size: "42"
                        color: "Negro/Blanco"
                        material: "Mesh y sintético"
                      ratings:
                        - score: 4
                          comment: "Muy cómodas para correr"
                    - id: 3
                      name: "Cien Años de Soledad"
                      description: "Obra maestra de Gabriel García Márquez. Edición conmemorativa del clásico del realismo mágico latinoamericano."
                      category: "books"
                      price: 25.99
                      inStock: false
                      tags: ["literatura", "clásico", "realismo mágico", "latinoamérica"]
                      specifications:
                        author: "Gabriel García Márquez"
                        pages: "432"
                        publisher: "Editorial Sudamericana"
                        language: "Español"
                      ratings:
                        - score: 5
                          comment: "Una obra maestra de la literatura"
                productos_electronicos:
                  summary: Solo productos electrónicos
                  value:
                    - id: 1
                      name: "iPhone 15 Pro Max 256GB"
                      description: "El iPhone 15 Pro Max redefine la innovación con su diseño de titanio."
                      category: "electronics"
                      price: 1399.99
                      inStock: true
                      tags: ["smartphone", "apple", "premium"]
                      specifications:
                        brand: "Apple"
                        storage: "256GB"
                      ratings: []
                    - id: 4
                      name: "Samsung Galaxy S24 Ultra"
                      description: "Smartphone premium con S Pen integrado, cámara de 200MP y pantalla Dynamic AMOLED 2X."
                      category: "electronics"
                      price: 1299.99
                      inStock: true
                      tags: ["smartphone", "samsung", "s-pen", "android"]
                      specifications:
                        brand: "Samsung"
                        storage: "512GB"
                        color: "Titanium Gray"
                      ratings:
                        - score: 5
                          comment: "El S Pen es genial para tomar notas"
    post:
      tags:
        - Products
      summary: Crear un nuevo producto
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 60
                  example: "MacBook Pro 14 M3"
                description:
                  type: string
                  maxLength: 500
                  example: "Laptop profesional con chip M3, pantalla Liquid Retina XDR de 14 pulgadas y hasta 22 horas de batería. Ideal para creadores de contenido y profesionales."
                category:
                  type: string
                  enum: [electronics, clothing, books, food]
                  example: "electronics"
                inStock:
                  type: boolean
                  default: true
                  example: true
                tags:
                  type: array
                  items:
                    type: string
                  example: ["laptop", "apple", "profesional", "m3"]
                price:
                  type: number
                  minimum: 0
                  multipleOf: 0.01
                  example: 2399.99
                specifications:
                  type: object
                  additionalProperties:
                    type: string
                  example:
                    brand: "Apple"
                    processor: "M3"
                    ram: "16GB"
                    storage: "512GB SSD"
                    screen: "14 pulgadas Liquid Retina XDR"
              required:
                - name
                - price
                - category
            examples:
              producto_electronico:
                summary: Producto electrónico
                value:
                  name: "MacBook Pro 14 M3"
                  description: "Laptop profesional con chip M3, pantalla Liquid Retina XDR de 14 pulgadas y hasta 22 horas de batería."
                  category: "electronics"
                  price: 2399.99
                  inStock: true
                  tags: ["laptop", "apple", "profesional", "m3"]
                  specifications:
                    brand: "Apple"
                    processor: "M3"
                    ram: "16GB"
                    storage: "512GB SSD"
              producto_ropa:
                summary: Producto de ropa
                value:
                  name: "Chaqueta Adidas Originals"
                  description: "Chaqueta deportiva clásica con las icónicas tres rayas, perfecta para el día a día o actividades deportivas."
                  category: "clothing"
                  price: 89.99
                  inStock: true
                  tags: ["chaqueta", "adidas", "deportiva", "casual"]
                  specifications:
                    brand: "Adidas"
                    size: "L"
                    material: "Poliéster reciclado"
                    color: "Negro con rayas blancas"
              producto_libro:
                summary: Producto libro
                value:
                  name: "El Principito"
                  description: "Clásico de la literatura universal. Una historia poética y filosófica que ha cautivado a lectores de todas las edades."
                  category: "books"
                  price: 18.50
                  inStock: true
                  tags: ["literatura", "clásico", "filosofía", "infantil"]
                  specifications:
                    author: "Antoine de Saint-Exupéry"
                    pages: "96"
                    publisher: "Editorial Planeta"
                    isbn: "978-84-08-12345-6"
      responses:
        '201':
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                producto_creado:
                  summary: Producto creado exitosamente
                  value:
                    id: 12345
                    name: "MacBook Pro 14 M3"
                    description: "Laptop profesional con chip M3, pantalla Liquid Retina XDR de 14 pulgadas y hasta 22 horas de batería."
                    category: "electronics"
                    price: 2399.99
                    inStock: true
                    tags: ["laptop", "apple", "profesional", "m3"]
                    specifications:
                      brand: "Apple"
                      processor: "M3"
                      ram: "16GB"
                      storage: "512GB SSD"
                    ratings: []
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "El nombre del producto debe tener entre 3 y 60 caracteres"
              examples:
                error_validacion:
                  summary: Error de validación
                  value:
                    message: "El nombre del producto debe tener entre 3 y 60 caracteres"
                error_precio:
                  summary: Error en el precio
                  value:
                    message: "El precio debe ser mayor a 0"
                error_categoria:
                  summary: Error en categoría
                  value:
                    message: "La categoría debe ser una de: electronics, clothing, books, food"
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                no_autorizado:
                  summary: Token requerido
                  value:
                    message: "Token de autenticación requerido"
                    error: "UNAUTHORIZED"
                    timestamp: "2024-01-15T10:30:00Z"
  /products/{id}:
    get:
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto
          schema:
            type: integer
            format: int64
      summary: Obtener producto por ID
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                iphone_producto:
                  summary: iPhone encontrado
                  value:
                    id: 1
                    name: "iPhone 15 Pro Max 256GB"
                    description: "El iPhone 15 Pro Max redefine la innovación con su diseño de titanio, cámara profesional de 48MP con zoom óptico 5x, y el potente chip A17 Pro."
                    category: "electronics"
                    price: 1399.99
                    inStock: true
                    tags: ["smartphone", "apple", "premium", "5g", "titanium"]
                    specifications:
                      brand: "Apple"
                      model: "iPhone 15 Pro Max"
                      storage: "256GB"
                      color: "Titanio Natural"
                      screen_size: "6.7 pulgadas"
                      camera: "48MP Principal + 12MP Ultra Gran Angular + 12MP Teleobjetivo"
                    ratings:
                      - score: 5
                        comment: "Excelente teléfono, la cámara es increíble y la batería dura todo el día"
                      - score: 4
                        comment: "Muy buena calidad, aunque el precio es elevado"
                libro_producto:
                  summary: Libro encontrado
                  value:
                    id: 3
                    name: "Cien Años de Soledad"
                    description: "Obra maestra de Gabriel García Márquez. Edición conmemorativa del clásico del realismo mágico latinoamericano."
                    category: "books"
                    price: 25.99
                    inStock: false
                    tags: ["literatura", "clásico", "realismo mágico", "latinoamérica"]
                    specifications:
                      author: "Gabriel García Márquez"
                      pages: "432"
                      publisher: "Editorial Sudamericana"
                      language: "Español"
                      isbn: "978-84-376-0494-7"
                    ratings:
                      - score: 5
                        comment: "Una obra maestra de la literatura universal"
                      - score: 5
                        comment: "Lectura obligatoria, narrativa increíble"
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Producto con ID 9999 no encontrado"
              examples:
                producto_no_encontrado:
                  summary: Producto no encontrado
                  value:
                    message: "Producto con ID 9999 no encontrado"
    put:
      tags:
        - Products
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a actualizar
          schema:
            type: integer
            format: int64
      summary: Actualizar completamente un producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 60
                description:
                  type: string
                  maxLength: 500
                category:
                  type: string
                  enum: [electronics, clothing, books, food]
                inStock:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
                price:
                  type: number
                  minimum: 0
                  multipleOf: 0.01
                specifications:
                  type: object
                  additionalProperties:
                    type: string
              required:
                - name
                - price
                - category
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Producto no encontrado
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Datos del producto inválidos
    patch:
      tags:
        - Products
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a actualizar parcialmente
          schema:
            type: integer
            format: int64
      summary: Actualizar parcialmente un producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 60
                description:
                  type: string
                  maxLength: 500
                category:
                  type: string
                  enum: [electronics, clothing, books, food]
                inStock:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
                price:
                  type: number
                  minimum: 0
                  multipleOf: 0.01
                specifications:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Producto no encontrado
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Datos del producto inválidos
    delete:
      tags:
        - Products
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: integer
            format: int64
      summary: Eliminar un producto
      responses:
        '204':
          description: Producto eliminado exitosamente
          content:
            application/json:
              examples:
                producto_eliminado:
                  summary: Producto eliminado
                  value: null
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Producto con ID 9999 no encontrado para eliminar"
              examples:
                producto_no_encontrado_delete:
                  summary: No se puede eliminar - producto no existe
                  value:
                    message: "Producto con ID 9999 no encontrado para eliminar"